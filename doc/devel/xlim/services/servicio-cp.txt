-----------------------------

- Servicio: cp

- Descripción: copia ficheros entre pcs a traves del XLIM.
	Cp maquina_orig:fichero_orig maquina_destino:fichero_destino

- Fichero de parametros utilizado en el protocolo (PARAM): es el fichero que recibe el servidor del servicio y contiene los siguientes parametros:
	* source: maquina_orig:fichero_orig 
	* dest: maquina_destino:fichero_destino
	* action: cp|mkdir|scp
		· cp: copia el fichero especificado.
		· mkdir: crea el directorio especificado
		· scp: indica que hay que ejecutar el servicio cp nuevamente
	* file: fichero a copiar

- Protocolo: se distinguen cuatro casos:

CASO 1: origen local, destino local

En este caso, se copia directamente el fichero al directorio especificado (mediante el metodo copyFile de Servutilities).


CASO 2: origen local, destino remoto

        CLIENTE                SERVIDOR

             PARAM(action=cp)+FILE
            ----------------------->

                      ACK
            <-----------------------


FILE: fichero que se quiere copiar.
El ACK es simplemente: si lo recibido no es un XERL (error), entonces es que fue bien. 


CASO 3: origen remoto, destino local.

        CLIENTE                SERVIDOR

             PARAM(action=scp)
            ----------------------->

                                lanzo cp fichero cliente:destino

                      ACK
            <-----------------------

El ACK es simplemente: si lo recibido no es un XERL (error), entonces es que fue bien. 

CASO 4: origen remoto, destino remoto.

        CLIENTE                SERVIDOR

             PARAM(action=scp)
            ----------------------->

                                lanzo cp fichero_orig maq_destino:fich_destino

                      ACK
            <-----------------------

Es decir, este caso es una mezcla de los dos anterirores: primero mandamos un fichero de parametros con action=scp y en el servidor se ejecuta el servicio cp con origen local y destino remoto.
El ACK es simplemente: si lo recibido no es un XERL (error), entonces es que fue bien. 


- Ficheros generados: 
	* fichero de log, cp.log y cp_xlim_call.log (resultado de la llamada a XLIM)
	* .xlim/logs/cplock.log, fichero de lock utilizado para cancelar la copia de ficheros.

 
- Paquete: isabel.xlim.services.cp

- Clases:  
	* Cp: cliente del servicio
	* Cps: servidor del servicio

	* Aboutserver

- Librerias/clases utilizadas por el servicio:
	* Servutilities: funciones varias
	* XlimNotifications: para escribir en el fichero de logs del XLIM (.xlim/logs/notif.xlim)
	* FileGarbageCollector: clase que se encarga de "llevar la cuenta" de los ficheros temporales que se crean durante el servicio y borrarlos cuando finaliza el servicio. Me entere demasiado tarde de la existencia de createTmpDir() y deleteOnExit() de la clase File O:).


- Ficheros en el repositorio: 
	* Directorio: xlimservices
	* Ficheros: 
		· xlimservices/isabel/xlim/services/cp/Cp
		· xlimservices/isabel/xlim/services/cp/Cps

- Casos especiales:

- Temas Pendientes:
	* Servicio poco utilizado y depurado. Se podria mejorar mucho, por ejemplo la forma en la que se cancela el servicio.
-----------------------------
