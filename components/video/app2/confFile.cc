/////////////////////////////////////////////////////////////////////////
//
// ISABEL: A group collaboration tool for the Internet
// Copyright (C) 2009 Agora System S.A.
// 
// This file is part of Isabel.
// 
// Isabel is free software: you can redistribute it and/or modify
// it under the terms of the Affero GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Isabel is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// Affero GNU General Public License for more details.
// 
// You should have received a copy of the Affero GNU General Public License
// along with Isabel.  If not, see <http://www.gnu.org/licenses/>.
//
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
//
// $Id: confFile.cc 20759 2010-07-05 10:30:36Z gabriel $
//
/////////////////////////////////////////////////////////////////////////

#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include <icf2/notify.hh>


//
// video config IO
//
#define VIDEO_CONFIG_VERSION 1

char*
videoConfigFileName(void)
{
    char *retVal= (char*)malloc(4096);

    char *isaConfDir= getenv("ISABEL_CONFIG_DIR");

    if (isaConfDir == NULL)
    {
        strcpy(retVal, "/tmp");
    }
    else
    {
        strcpy(retVal, isaConfDir);
    }

    strcat(retVal, "/video.conf");

    return retVal;
}

static char *confFileName= videoConfigFileName();

bool
readConfigFile(char *camera, int camLen)
{
    NOTIFY("+++reading video configuration file: %s\n", confFileName);

    int version= -1;

    if (access(confFileName, F_OK | R_OK) != 0)
    {
        //
        // No file found! lets put default values
        // and create a file for the user
        //

        NOTIFY("+++no video configuration file found!\n");

        return false;
    }

    FILE *fin= fopen(confFileName, "r");
    if (fin)
    {
        char readBuf[1024];

        while ( fgets( readBuf, 1024, fin))
        {
            if (readBuf[0]== '#') continue;

            char *keyword, *param, *aux;

            // get rides of '\n', if any
            if ((aux= strchr(readBuf, '\n')) != NULL)
                *aux= '\0';

            // search for blank
            if ((param= strchr(readBuf, ' ')) == NULL)
            {
                continue;
            }
            keyword= readBuf;
            param[0]= '\0';
            param++;

            if (strcasecmp("VERSION", keyword) == 0)
            {
                version= atoi(param);
            }
            else if(strcasecmp("camera", keyword) == 0)
            {
                strncpy(camera, param, camLen);
            }
            else
            {
                NOTIFY("Syntax error in file: '%s'\n", confFileName);
            }
        }
        fclose(fin);
    }

    if ( (version == -1) || (version != VIDEO_CONFIG_VERSION) )
    {
        return false;
    }
    return true;
}

void
writeConfigFile(const char *camera)
{
    FILE *fout= fopen(confFileName, "w");

    if ( ! fout)
    {
        NOTIFY("cannot create video configuration file: %s\n",
               confFileName
              );
        return;
    }

    fprintf(fout,
            "#\n"
            "# Automatically generated by %s -- %s"
            "#\n"
            "# DO NOT EDIT\n"
            "VERSION %d\n"
            "\n"
            "# camera\n"
            "camera %s\n",
            "ISABEL", "video_module.dso",
            VIDEO_CONFIG_VERSION,
            camera
           );

    fclose(fout);
}


