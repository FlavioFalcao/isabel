########################################################################
#
#  ISABEL: A group collaboration tool for the Internet
#  Copyright (C) 2009 Agora System S.A.
#  
#  This file is part of Isabel.
#  
#  Isabel is free software: you can redistribute it and/or modify
#  it under the terms of the Affero GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  Isabel is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  Affero GNU General Public License for more details.
# 
#  You should have received a copy of the Affero GNU General Public License
#  along with Isabel.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

################################################################
#
#  Dialog window to scan images.
#
################################################################


class ScannerDialogWindowC {

    # DoScan object
    private variable scanobj

    # Previewer widget object
    private variable previewobj

    # Location for the scanned files.
    private variable pathdir

    # rotate the image
    private common rotate


    # okCB is the callback to execute if success. The image filename
    # is appended as argument.
    private variable okCB

    # closeOk is the callback to execute when the window is closed. 
    # No arguments are added.
    private variable closeCB

    # errorCB is the callback to execute if an error happens. An error
    # message is added as argument.
    private variable errorCB

    # 1 if I want to make a grab
    private variable grab

    constructor {pdir _okCB _closeCB _errorCB {must_grab 0}} {}
    destructor {}

    # Open/Close the window
    public method Open {} {}
    public method Close {} {}

    private method Scan    {} {}
    private method Cancel  {} {}
    private method Preview {} {}
    private method SetArea {{res ""}} {}

    private method SetScanPreviewState {state} {}
}

#-----------------------------------------

body ScannerDialogWindowC::constructor {pdir  _okCB _closeCB _errorCB {must_grab 0}} {

    set pathdir $pdir
    set grab    $must_grab

    set okCB     $_okCB
    set closeCB  $_closeCB
    set errorCB  $_errorCB
    
    set scanobj    [DoScanC #auto]
    
    toplevel .scandialogwindow

    wm withdraw .scandialogwindow
    
    frame .scandialogwindow.f -relief groove -bd 3
    pack .scandialogwindow.f -padx 4 -pady 4 -ipadx 10 -ipady 10 -fill both -expand 1
    
    label .scandialogwindow.f.title -text SCANNER 
    
    ::iwidgets::optionmenu .scandialogwindow.f.mode -labeltext Mode:
    .scandialogwindow.f.mode insert end Color Grayscale Halftone Lineart 
    .scandialogwindow.f.mode select 1

    image create bitmap resImg \
	    -foreground #c33 \
	    -data {
#define ro_width 32
#define ro_height 32
static unsigned char ro_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xb6, 0x0d,
   0x00, 0x00, 0xb6, 0x0d, 0x80, 0xaa, 0x00, 0x00, 0x00, 0x00, 0xb6, 0x0d,
   0xa0, 0xda, 0xb6, 0x0d, 0x00, 0xd8, 0x00, 0x00, 0xa0, 0x06, 0xbe, 0x0f,
   0x00, 0xf6, 0xbe, 0x0f, 0xa0, 0xf0, 0xbe, 0x0f, 0x00, 0xf6, 0xbe, 0x0f,
   0xa0, 0xf6, 0xbe, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x60, 0xfb, 0xfe, 0x0f,
   0x60, 0xfb, 0xfe, 0x0f, 0x00, 0xf8, 0xfe, 0x0f, 0x60, 0xfb, 0xfe, 0x0f,
   0x60, 0xfb, 0xfe, 0x0f, 0x00, 0x00, 0xfe, 0x0f, 0x60, 0xfb, 0xfe, 0x0f,
   0x60, 0xfb, 0xfe, 0x0f, 0x00, 0xf8, 0xfe, 0x0f, 0x60, 0xfb, 0xfe, 0x0f,
   0x60, 0xfb, 0xfe, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    }

    label .scandialogwindow.f.resimg -image resImg \
    
    
    scale .scandialogwindow.f.res \
	    -from 12 \
	    -to 600 \
	    -orient horizontal \
	    -command [code $this SetArea]

    .scandialogwindow.f.res set 75
    

    image create bitmap brightnessImg \
	    -foreground #c33 \
	    -data {
#define brillo_width 32
#define brillo_height 32
static unsigned char brillo_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
   0x40, 0x60, 0x40, 0x00, 0xe0, 0x60, 0xe0, 0x00, 0xc0, 0x01, 0x70, 0x00,
   0x80, 0xf1, 0x31, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 0x0e, 0x0e, 0x00,
   0x00, 0x06, 0x0c, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x03, 0xd8, 0x03,
   0x78, 0x03, 0xd8, 0x03, 0x78, 0x03, 0x18, 0x00, 0x00, 0x03, 0x18, 0x00,
   0x00, 0x06, 0x0c, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0xfc, 0x07, 0x00,
   0x80, 0xf1, 0x31, 0x00, 0xc0, 0x01, 0x70, 0x00, 0xe0, 0xc0, 0xe0, 0x00,
   0x40, 0xc0, 0x40, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    }

    label .scandialogwindow.f.bimg -image brightnessImg \

    scale .scandialogwindow.f.brightness \
	    -from -127 \
	    -to 127 \
	    -orient horizontal
    .scandialogwindow.f.brightness set 0
    

    image create bitmap contrastImg \
	    -foreground #c33 \
	    -data {
#define contraste_width 32
#define contraste_height 32
static unsigned char contraste_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x03, 0x00,
   0x00, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0x1f, 0x00, 0x80, 0x87, 0x3f, 0x00,
   0xc0, 0x83, 0x7f, 0x00, 0xe0, 0x81, 0xff, 0x00, 0xe0, 0x80, 0xff, 0x00,
   0x70, 0x80, 0xff, 0x01, 0x70, 0x80, 0xff, 0x01, 0x70, 0x80, 0xff, 0x01,
   0x70, 0x80, 0xff, 0x01, 0x70, 0x80, 0xff, 0x01, 0x70, 0x80, 0xff, 0x01,
   0x70, 0x80, 0xff, 0x01, 0xe0, 0x80, 0xff, 0x00, 0xe0, 0x81, 0xff, 0x00,
   0xc0, 0x83, 0x7f, 0x00, 0x80, 0x87, 0x3f, 0x00, 0x00, 0xff, 0x1f, 0x00,
   0x00, 0xfe, 0x0f, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    }

    label .scandialogwindow.f.cimg -image contrastImg \
    
    scale .scandialogwindow.f.contrast \
	    -from -127 \
	    -to 127 \
	    -orient horizontal
    .scandialogwindow.f.contrast set 0


    image create bitmap rotateImg \
	    -foreground #c33 \
	    -data {
#define ro_width 32
#define ro_height 32
static unsigned char ro_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x03, 0x00,
   0x00, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0x1f, 0x00, 0x80, 0x07, 0x3c, 0x00,
   0xc0, 0x03, 0x78, 0x00, 0xe0, 0x01, 0xf0, 0x00, 0xe0, 0x00, 0xe0, 0x00,
   0x70, 0x00, 0xc0, 0x01, 0x70, 0x00, 0xc0, 0x01, 0x70, 0x00, 0xf8, 0x0f,
   0x70, 0x00, 0xf0, 0x07, 0x70, 0x00, 0xf0, 0x07, 0x70, 0x00, 0xe0, 0x03,
   0x70, 0x00, 0xe0, 0x03, 0xe0, 0x00, 0xc0, 0x01, 0xe0, 0x01, 0xc0, 0x01,
   0xc0, 0x03, 0x80, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
   0x00, 0xfe, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    }
    

    label .scandialogwindow.f.rimg -image rotateImg \
    
    checkbutton .scandialogwindow.f.rotate -text "Rotate Image" \
	    -variable [scope rotate($this)] \
	    -onvalue 1 \
	    -offvalue 0
    
    set previewobj [ScanPreviewC #auto .scandialogwindow.f.sp [code $scanobj]]
    
    $previewobj SetSelectionCB  [code $this SetArea]

    label .scandialogwindow.f.scannedarea -text "210x296+0+0 (mm)" 
    
    button .scandialogwindow.f.preview -text preview \
	    -command [code $this Preview]
    
    
    button .scandialogwindow.f.scan    -text Scan \
	    -command [code $this Scan]
    button .scandialogwindow.f.cancel  -text Cancel \
	    -command [code $this Cancel]

    button .scandialogwindow.f.dismiss  -text Dismiss \
	    -command "$this Close"
    
    
    grid .scandialogwindow.f.title       -row 0 -column 0 -columnspan 5 -sticky n
    grid rowconfigure .scandialogwindow.f 0 -pad 10
    
    grid .scandialogwindow.f.mode        -row 1 -column 0 -columnspan 3 -sticky we
    grid .scandialogwindow.f.resimg      -row 2 -column 0 -sticky s
    grid .scandialogwindow.f.res         -row 2 -column 1 -columnspan 2 -sticky swe
    grid .scandialogwindow.f.bimg        -row 3 -column 0 -sticky s
    grid .scandialogwindow.f.brightness  -row 3 -column 1 -columnspan 2 -sticky swe
    grid .scandialogwindow.f.cimg        -row 4 -column 0 -sticky s
    grid .scandialogwindow.f.contrast    -row 4 -column 1 -columnspan 2 -sticky swe
    grid .scandialogwindow.f.rimg        -row 5 -column 0 
    grid .scandialogwindow.f.rotate      -row 5 -column 1 -columnspan 2 -sticky w
    
    grid .scandialogwindow.f.sp          -row 1 -column 3 -columnspan 2 -rowspan 6
    # grid columnconfigure .scandialogwindow.f 0 -pad 20
    # grid columnconfigure .scandialogwindow.f 1 -pad 20
    grid columnconfigure .scandialogwindow.f 2 -pad 20

    grid .scandialogwindow.f.scannedarea -row 7 -column 3 -columnspan 2
    
    grid .scandialogwindow.f.dismiss     -row 10 -column 1 -sticky s
    grid .scandialogwindow.f.cancel      -row 10 -column 2 -sticky s
    grid .scandialogwindow.f.preview     -row 10 -column 3 -sticky s
    grid .scandialogwindow.f.scan        -row 10 -column 4 -sticky s

    grid rowconfigure .scandialogwindow.f  0 -pad 10 -weight 1
    grid rowconfigure .scandialogwindow.f 10 -pad 10 -weight 1
    
}

#-----------------------------------------

body ScannerDialogWindowC::destructor {} {

    delete object $scanobj
    delete object $previewobj
    grab release .scandialogwindow
    destroy .scandialogwindow
}

#-----------------------------------------

body ScannerDialogWindowC::Scan {} {
    
    SetScanPreviewState disabled

    set sel [$previewobj GetSelection]    
    
    $scanobj Scan [.scandialogwindow.f.mode get] \
	    [.scandialogwindow.f.res get] \
	    [.scandialogwindow.f.brightness get] \
	    [.scandialogwindow.f.contrast get] \
	    [lindex $sel 0] \
	    [lindex $sel 1] \
	    [lindex $sel 2] \
	    [lindex $sel 3] \
	    $rotate($this) \
	    $pathdir/scan[clock clicks].gif \
            [code $this SetScanPreviewState normal] \
	    $okCB \
	    {puts Cancelled} \
	    $errorCB 
}

#-----------------------------------------

body ScannerDialogWindowC::Preview {} {
    
    SetScanPreviewState disabled

    $previewobj StartPreview \
	    [.scandialogwindow.f.brightness get] \
	    [.scandialogwindow.f.contrast   get] \
            [code $this SetScanPreviewState normal]
    
}

#-----------------------------------------

body ScannerDialogWindowC::Cancel {} {
    
    $scanobj Cancel

    SetScanPreviewState normal
}

#-----------------------------------------

body ScannerDialogWindowC::SetArea {{res ""}} {

    set sel [$previewobj GetSelection]    
    
    set x [lindex $sel 0] 
    set y [lindex $sel 1] 
    set w [lindex $sel 2] 
    set h [lindex $sel 3] 
    
    set label ${w}x${h}+${x}+${y}

    .scandialogwindow.f.scannedarea configure -text "$label (mm)"

    #------------

    if {$res == ""} {
	set res [.scandialogwindow.f.res get]
    }
    
    set wp [expr round(1.0*$w*$res/25.4)]
    set hp [expr round(1.0*$h*$res/25.4)]

    set label "${wp} x ${hp}"

    .scandialogwindow.f.res configure -label "$label (pixels)"

}

#-----------------------------------------

body ScannerDialogWindowC::Open {} {

    wm deiconify .scandialogwindow

    if {$grab} {
	grab  .scandialogwindow
	focus .scandialogwindow
    }
}

#-----------------------------------------

body ScannerDialogWindowC::Close {} {

    if {$grab} {
	grab release .scandialogwindow
    }

    wm withdraw .scandialogwindow

    if {$closeCB != ""} {
	uplevel $closeCB
    }
}

#-----------------------------------------

body ScannerDialogWindowC::SetScanPreviewState {state} {

    .scandialogwindow.f.dismiss configure -state $state
    .scandialogwindow.f.preview configure -state $state
    .scandialogwindow.f.scan    configure -state $state

}

#-----------------------------------------



