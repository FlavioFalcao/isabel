/*
 * ISABEL: A group collaboration tool for the Internet
 * Copyright (C) 2009 Agora System S.A.
 * 
 * This file is part of Isabel.
 * 
 * Isabel is free software: you can redistribute it and/or modify
 * it under the terms of the Affero GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Isabel is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Affero GNU General Public License for more details.
 * 
 * You should have received a copy of the Affero GNU General Public License
 * along with Isabel.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * NewContactPanel.java
 *
 * Created on 14 de julio de 2004, 15:35
 */

package services.isabel.lib;

import java.util.*;

/**
 *
 * @author  lailoken
 */
public class NewContactPanel extends javax.swing.JPanel {
  
  /** Creates new form NewContactPanel */
  public NewContactPanel() {
    initComponents();
    ips = new LinkedList();
  }
  
  /** Creates new form NewContactPanel 
   @param ip Ip for this new contact.
   */
  public NewContactPanel(String ip) {
    initComponents();
    ips = new LinkedList();
    ips.add(ip);
    ipCombo.addItem(ip);
  }
  
  /** Creates new form NewContactPanel 
   @param id ID for this new contact.
   @param fullName Full Name for this new contact.
   @param ip Ip for this new contact.
   */
  public NewContactPanel(String id, String fullName, String ip) {
    initComponents();
    ips = new LinkedList();
    ips.add(ip);
    if (!ip.equals("")) ipCombo.addItem(ip);
    idField.setText(id);
    fullNameField.setText(fullName);
  }
  
  /** Creates new form NewContactPanel 
   @param id ID for this new contact.
   @param fullName Full Name for this new contact.
   @param ips Ip for this new contact.
   */
  public NewContactPanel(String id, String fullName, LinkedList ip) {
    initComponents();
    ips = new LinkedList();
    ips = ip;
    for (int i= 0; i<ips.size();i++) ipCombo.addItem(ips.get(i).toString());
    idField.setText(id);
    fullNameField.setText(fullName);
  }

  /** Devuelve el ID introducido por el usuario
   * @return el ID.
   */
  public String getID() {
    return idField.getText();
  }
  
  /** Devuelve el fullname introducido por el usuario
   * @return el fullname.
   */
  public String getFullName() {
    return fullNameField.getText();
  }
  
  /** Devuelve la ip introducida por el usuario
   * @return la ip.
   */
  public String getIP() {
    return ipCombo.getEditor().getItem().toString();
  }
  
  /** Devuelve las ips introducidas por el usuario
   * @return las ips.
   */
  public LinkedList getIps() {
    return ips;
  }
  
  /**
   * Devuelve true si la ip dada se encuentra en la lista de ips
   */
  public boolean existIp(String ip) {
    boolean result = false;
    for (int i=0;i<ips.size();i++) 
      if (ip.equalsIgnoreCase(ips.get(i).toString())) result = true;
    return result;
  }
  
  /**
   * A�ade la ip dada a la lista de ips
   */
  public void addIp (String ip) {
    ips.add(ip);
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    java.awt.GridBagConstraints gridBagConstraints;

    instructionsLabel = new javax.swing.JLabel();
    idLabel = new javax.swing.JLabel();
    idField = new javax.swing.JTextField();
    fullNameLabel = new javax.swing.JLabel();
    fullNameField = new javax.swing.JTextField();
    ipLabel = new javax.swing.JLabel();
    ipCombo = new javax.swing.JComboBox();
    ipButton = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    setBorder(new javax.swing.border.EtchedBorder(javax.swing.border.EtchedBorder.RAISED));
    instructionsLabel.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
    instructionsLabel.setText("New Contact Information:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(instructionsLabel, gridBagConstraints);

    idLabel.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
    idLabel.setText("NickName:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    add(idLabel, gridBagConstraints);

    idField.setPreferredSize(new java.awt.Dimension(150, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(idField, gridBagConstraints);

    fullNameLabel.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
    fullNameLabel.setText("Full Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    add(fullNameLabel, gridBagConstraints);

    fullNameField.setPreferredSize(new java.awt.Dimension(150, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(fullNameField, gridBagConstraints);

    ipLabel.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
    ipLabel.setText("IP Addresses:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    add(ipLabel, gridBagConstraints);

    ipCombo.setEditable(true);
    ipCombo.setPreferredSize(new java.awt.Dimension(150, 19));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    add(ipCombo, gridBagConstraints);

    ipButton.setFont(new java.awt.Font("MS Sans Serif", 1, 12));
    ipButton.setText("Add IP");
    ipButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        ipButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    add(ipButton, gridBagConstraints);

  }//GEN-END:initComponents

  private void ipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipButtonActionPerformed
    // A�adimos la ip que hay en el campo IP en la lista de ips
    String newIp = ipCombo.getEditor().getItem().toString();
    ips.add(newIp);
    // y en el combo;
    ipCombo.addItem(newIp);
  }//GEN-LAST:event_ipButtonActionPerformed
  
  
  private LinkedList ips;
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField fullNameField;
  private javax.swing.JLabel fullNameLabel;
  private javax.swing.JTextField idField;
  private javax.swing.JLabel idLabel;
  private javax.swing.JLabel instructionsLabel;
  private javax.swing.JButton ipButton;
  private javax.swing.JComboBox ipCombo;
  private javax.swing.JLabel ipLabel;
  // End of variables declaration//GEN-END:variables
  
}
