//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.2-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.14 at 02:11:19 PM CET 
//


package xedl.lib.jaxb;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}SITE" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "site"
})
@XmlRootElement(name = "site-description")
public class SiteDescription {

    @XmlElement(name = "SITE")
    protected List<SITE> site;

    /**
     * Gets the value of the site property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the site property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSITE().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SITE }
     * 
     * 
     */
    public List<SITE> getSITE() {
        if (site == null) {
            site = new ArrayList<SITE>();
        }
        return this.site;
    }
    
    
    /**
     * Method to get a list of the ids fields
     * 
     */
    public LinkedList<String> getSITEListIds() {
    	LinkedList<String> result = new LinkedList<String>();
    	if (site == null) {
            return result;
        }
        for(int i=0;i<this.site.size(); i++)
        {
        	result.add(this.site.get(i).getID());
        }
        return result;
    }
    
    
    
    /**
	 * Method to get a particular site from its id
	 * returns null if the site is not in the list
	 */
	public SITE getSITE(String id)
	{
		List<SITE> milista = this.getSITE();
		for(int i =0; i< milista.size(); i++){
			if(milista.get(i).getID().equals(id))
				return milista.get(i);
		}
		return null;
	}

}
